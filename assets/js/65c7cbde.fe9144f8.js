"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[4540],{24940:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"JAVA/JAVA-AQS","title":"JAVA-AQS","description":"JAVA-AQS","source":"@site/docs/JAVA/java-aqs.md","sourceDirName":"JAVA","slug":"/INTERVIEW/JAVA/JAVA-AQS","permalink":"/doc/docs/INTERVIEW/JAVA/JAVA-AQS","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JAVA/java-aqs.md","tags":[{"inline":true,"label":"INTERVIEW","permalink":"/doc/docs/tags/interview"},{"inline":true,"label":"JAVA","permalink":"/doc/docs/tags/java"},{"inline":true,"label":"AQS","permalink":"/doc/docs/tags/aqs"}],"version":"current","frontMatter":{"id":"JAVA-AQS","title":"JAVA-AQS","description":"JAVA-AQS","slug":"/INTERVIEW/JAVA/JAVA-AQS","tags":["INTERVIEW","JAVA","AQS"]},"sidebar":"tutorialSidebar","previous":{"title":"java","permalink":"/doc/docs/JAVA/"},"next":{"title":"JAVA-COLLECTION","permalink":"/doc/docs/INTERVIEW/JAVA/JAVA-COLLECTION"}}');var a=n(74848),i=n(28453);const s={id:"JAVA-AQS",title:"JAVA-AQS",description:"JAVA-AQS",slug:"/INTERVIEW/JAVA/JAVA-AQS",tags:["INTERVIEW","JAVA","AQS"]},l=void 0,d={},o=[{value:"State\uff08\u72b6\u6001\u53d8\u91cf\uff09\uff1a",id:"state\u72b6\u6001\u53d8\u91cf",level:3},{value:"CLH\u961f\u5217\uff1a",id:"clh\u961f\u5217",level:3},{value:"AQS\u662f\u5e72\u5565\u7684\uff1f",id:"aqs\u662f\u5e72\u5565\u7684",level:3},{value:"java8\u7248\u672caqs",id:"java8\u7248\u672caqs",level:3},{value:"\u4ee5\u4e0b\u662fjava17\u7248\u672c\u7684",id:"\u4ee5\u4e0b\u662fjava17\u7248\u672c\u7684",level:3},{value:"\u52a0\u9501\u903b\u8f91",id:"\u52a0\u9501\u903b\u8f91",level:4}];function c(e){const r={code:"code",h1:"h1",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.p,{children:["\u2699\ufe0f \u4e00\u3001AQS\u7684\u6838\u5fc3\u539f\u7406\r\nAQS\u7684\u4f5c\u7528\u4e0e\u8bbe\u8ba1\u601d\u60f3 AQS\u662fJava\u5e76\u53d1\u5305\u7684\u57fa\u7840\u6846\u67b6\uff0c\u901a\u8fc7\r\n\u72b6\u6001\u53d8\u91cf\uff08state\uff09 \u548c FIFO\u53cc\u5411\u961f\u5217\uff08CLH\u53d8\u4f53\uff09 \u7ba1\u7406",(0,a.jsx)(r.strong,{children:"\u7ebf\u7a0b\u540c\u6b65"}),"\u3002\r\n",(0,a.jsx)(r.strong,{children:"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f"}),"\uff1a\u5b50\u7c7b\u53ea\u9700\u5b9e\u73b0tryAcquire\u3001tryRelease\u7b49\u65b9\u6cd5\u5b9a\u4e49\u8d44\u6e90\u83b7\u53d6\u89c4\u5219\uff0cAQS\u5904\u7406\u7ebf\u7a0b\u6392\u961f\u3001\u963b\u585e/\u5524\u9192\u7b49\u901a\u7528\u903b\u8f91\u3002\r\n\u9002\u7528\u573a\u666f\uff1aReentrantLock\u3001Semaphore\u3001CountDownLatch\u7b49\u5747\u57fa\u4e8eAQS\u5b9e\u73b0\u3002\r\n\u6838\u5fc3\u7ec4\u4ef6\u89e3\u6790"]}),"\n",(0,a.jsx)(r.h3,{id:"state\u72b6\u6001\u53d8\u91cf",children:"State\uff08\u72b6\u6001\u53d8\u91cf\uff09\uff1a"}),"\n",(0,a.jsx)(r.p,{children:"volatile int\u7c7b\u578b\uff0c\u901a\u8fc7CAS\u539f\u5b50\u64cd\u4f5c\uff08compareAndSetState\uff09\u66f4\u65b0\u3002\r\n\u4e0d\u540c\u5b50\u7c7b\u8d4b\u4e88\u4e0d\u540c\u8bed\u4e49\uff1a\r\nReentrantLock\uff1astate=0\u8868\u793a\u9501\u7a7a\u95f2\uff0c>0\u8868\u793a\u91cd\u5165\u6b21\u6570\u3002\r\nSemaphore\uff1astate\u8868\u793a\u5269\u4f59\u8bb8\u53ef\u8bc1\u6570\u91cf\u3002"}),"\n",(0,a.jsx)(r.h3,{id:"clh\u961f\u5217",children:"CLH\u961f\u5217\uff1a"}),"\n",(0,a.jsx)(r.p,{children:"\u53cc\u5411\u94fe\u8868\u7ed3\u6784\uff0c\u8282\u70b9Node\u5c01\u88c5\u7b49\u5f85\u7ebf\u7a0b\u3001\u7b49\u5f85\u72b6\u6001\uff08waitStatus\uff09\u53ca\u524d\u540e\u6307\u9488\u3002\r\n\u8282\u70b9\u72b6\u6001\uff1aCANCELLED\uff08\u53d6\u6d88\uff09\u3001SIGNAL\uff08\u9700\u5524\u9192\u540e\u7ee7\u8282\u70b9\uff09\u3001CONDITION\uff08\u6761\u4ef6\u7b49\u5f85\uff09\u3002\r\n\ud83d\udd04 \u4e8c\u3001\u540c\u6b65\u673a\u5236\u5de5\u4f5c\u6d41\u7a0b\r\n\u8d44\u6e90\u83b7\u53d6\uff08acquire\uff09\r\n\u72ec\u5360\u6a21\u5f0f\uff08\u5982ReentrantLock\uff09\uff1a"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"public final void acquire(int arg) {\r\nif (!tryAcquire(arg) &&\r\nacquireQueued(addWaiter(Node.EXCLUSIVE), arg))\r\nselfInterrupt();\r\n}\n"})}),"\n",(0,a.jsx)(r.p,{children:"\u6b65\u9aa4\uff1a\r\ntryAcquire()\u5c1d\u8bd5\u76f4\u63a5\u83b7\u53d6\u8d44\u6e90\uff08\u5b50\u7c7b\u5b9e\u73b0\uff09\u3002\r\n\u5931\u8d25\u5219\u8c03\u7528addWaiter()\u5c06\u7ebf\u7a0b\u5c01\u88c5\u4e3aNode\u52a0\u5165\u961f\u5217\u5c3e\u90e8\u3002\r\nacquireQueued()\u81ea\u65cb\u68c0\u67e5\u662f\u5426\u4e3a\u5934\u8282\u70b9\u540e\u7ee7\uff0c\u662f\u5219\u518d\u6b21\u5c1d\u8bd5\u83b7\u53d6\uff1b\u5426\u5219\u8c03\u7528LockSupport.park()\u6302\u8d77\u7ebf\u7a0b\u3002\r\n\u5171\u4eab\u6a21\u5f0f\uff08\u5982Semaphore\uff09\uff1a\r\n\u901a\u8fc7acquireShared()\u5524\u9192\u540e\u7eed\u8282\u70b9\u5f62\u6210\u201c\u8fde\u9501\u53cd\u5e94\u201d\uff08\u4f20\u64ad\u5524\u9192\uff09\uff0c\u51cf\u5c11\u591a\u6b21\u5524\u9192\u5f00\u9500\u3002\r\n\u8d44\u6e90\u91ca\u653e\uff08release\uff09"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"public final boolean release(int arg) {\r\nif (tryRelease(arg)) {\r\nNode h = head;\r\nif (h != null && h.waitStatus != 0)\r\nunparkSuccessor(h); // \u5524\u9192\u540e\u7ee7\u8282\u70b9\r\nreturn true;\r\n}\r\nreturn false;\r\n}\n"})}),"\n",(0,a.jsx)(r.p,{children:"tryRelease()\u66f4\u65b0state\uff0c\u6210\u529f\u540e\u68c0\u67e5\u5934\u8282\u70b9\u72b6\u6001\uff0c\u5524\u9192\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u6709\u6548\u8282\u70b9\uff08\u975eCANCELLED\uff09\u3002"}),"\n",(0,a.jsx)(r.p,{children:"\u7279\u6027\t\u516c\u5e73\u9501\t\u975e\u516c\u5e73\u9501\r\n\u5b9e\u73b0\u903b\u8f91\t\u5148\u68c0\u67e5\u961f\u5217\u662f\u5426\u6709\u7b49\u5f85\u7ebf\u7a0b\uff08hasQueuedPredecessors()\uff09\uff0c\u6709\u5219\u6392\u961f\t\u76f4\u63a5CAS\u62a2\u9501\uff0c\u5141\u8bb8\u63d2\u961f\r\n\u6027\u80fd\t\u4e0a\u4e0b\u6587\u5207\u6362\u591a\uff0c\u541e\u5410\u91cf\u4f4e\t\u51cf\u5c11\u7ebf\u7a0b\u5207\u6362\uff0c\u541e\u5410\u91cf\u9ad8\r\n\u9965\u997f\u95ee\u9898\t\u907f\u514d\u9965\u997f\t\u53ef\u80fd\u5f15\u53d1\u7ebf\u7a0b\u9965\u997f\r\n\u6e90\u7801\u4f4d\u7f6e\tReentrantLock.FairSync\tReentrantLock.NonfairSync"}),"\n",(0,a.jsx)(r.p,{children:"\u4e3a\u4ec0\u4e48AQS\u7528\u53cc\u5411\u961f\u5217\u800c\u975e\u5355\u5411\uff1f\r\n\u9ad8\u6548\u5904\u7406\u53d6\u6d88\u8282\u70b9\uff1a\u7ebf\u7a0b\u8d85\u65f6\u6216\u4e2d\u65ad\u65f6\uff0c\u53cc\u5411\u94fe\u8868\u53ef\u5feb\u901f\u79fb\u9664\u8282\u70b9\uff08O(1)\uff09\uff0c\u5355\u5411\u94fe\u8868\u9700\u904d\u5386\uff08O(n)\uff09\u3002\r\n\u7cbe\u51c6\u5524\u9192\uff1a\u91ca\u653e\u8d44\u6e90\u65f6\u9700\u4ece\u5c3e\u90e8\u5411\u524d\u904d\u5386\u627e\u5230\u9996\u4e2a\u6709\u6548\u8282\u70b9\uff08\u907f\u514dCANCELLED\u8282\u70b9\uff09"}),"\n",(0,a.jsx)(r.p,{children:"AQS\u5982\u4f55\u5904\u7406\u7ebf\u7a0b\u4e2d\u65ad\uff1f\r\n\u4e0d\u53ef\u4e2d\u65ad\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09\uff1aacquire()\u671f\u95f4\u88ab\u4e2d\u65ad\uff0c\u4ec5\u6807\u8bb0\u4e2d\u65ad\u72b6\u6001\uff0c\u7ebf\u7a0b\u4ecd\u963b\u585e\u76f4\u5230\u83b7\u53d6\u8d44\u6e90\u540e\u518d\u54cd\u5e94\u4e2d\u65ad\u3002\r\n\u53ef\u4e2d\u65ad\u6a21\u5f0f\uff1aacquireInterruptibly()\u88ab\u4e2d\u65ad\u65f6\u76f4\u63a5\u629b\u51faInterruptedException"}),"\n",(0,a.jsx)(r.p,{children:"ConditionObject\u4e0eObject.wait()\u7684\u533a\u522b\uff1f\r\n\u5bf9\u6bd4\u9879\tConditionObject\tObject.wait()\r\n\u7ed1\u5b9a\u9501\t\u5fc5\u987b\u7ed1\u5b9aAQS\u5b9e\u73b0\u7684\u9501\uff08\u5982ReentrantLock\uff09\t\u4efb\u610fsynchronized\u5bf9\u8c61\r\n\u591a\u6761\u4ef6\u961f\u5217\t\u652f\u6301\u591a\u4e2a\uff08\u5982\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u5206\u79bb\uff09\t\u4ec5\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\r\n\u5524\u9192\u7cbe\u5ea6\tsignal()\u7cbe\u786e\u5524\u9192\u6307\u5b9a\u6761\u4ef6\u961f\u5217\u7ebf\u7a0b\tnotify()\u968f\u673a\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b\r\n\u5171\u4eab\u6a21\u5f0f\u4e0b\u7684\u5524\u9192\u4f20\u64ad\u662f\u4ec0\u4e48\uff1f\r\n\u91ca\u653e\u8d44\u6e90\u65f6\u5524\u9192\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u83b7\u53d6\u8d44\u6e90\u540e\u7ee7\u7eed\u5524\u9192\u540e\u7eed\u5171\u4eab\u8282\u70b9\uff0c\u5f62\u6210\u8fde\u9501\u53cd\u5e94\uff08\u5982Semaphore\uff09\uff0c\u51cf\u5c11\u5524\u9192\u6b21\u6570"}),"\n",(0,a.jsx)(r.p,{children:"state\u5e72\u5565\u7528\uff1f\u2014\u2014 ReentrantLock\u8bb0\u91cd\u5165\u6b21\u6570\uff0cSemaphore\u8bb0\u5269\u4f59\u8bb8\u53ef\u8bc1\u3002\r\n\u516c\u5e73 vs \u975e\u516c\u5e73\uff1f\u2014\u2014 \u975e\u516c\u5e73\u9501\u5141\u8bb8\u63d2\u961f\uff08\u6027\u80fd\u9ad8\uff09\uff0c\u516c\u5e73\u9501\u4e25\u683c\u6392\u961f\uff08\u9632\u9965\u997f\uff09\u3002\r\n\u4e3a\u4ec0\u4e48\u7528\u53cc\u5411\u961f\u5217\uff1f\u2014\u2014 \u65b9\u4fbf\u53d6\u6d88\u6392\u961f\uff08\u6bd4\u5982\u7ebf\u7a0b\u8d85\u65f6\u4e86\u80fd\u5feb\u901f\u79fb\u9664\uff09"}),"\n",(0,a.jsxs)(r.p,{children:["AbstractQueuedSynchronizer\r\nAQS\u628a\u590d\u6742\u64cd\u4f5c\uff08\u6392\u961f\u3001\u963b\u585e\u3001\u5524\u9192\uff09\u90fd\u5c01\u88c5\u597d\u4e86\u3002\u5f00\u53d1\u8005\u53ea\u9700\u5b9e\u73b0\u51e0\u4e2a\u7b80\u5355\u65b9\u6cd5\uff1a\r\n",(0,a.jsx)(r.strong,{children:"tryAcquire()\uff1a\u600e\u4e48\u62a2\u8d44\u6e90\uff1f"}),"\r\n",(0,a.jsx)(r.strong,{children:"tryRelease()\uff1a\u600e\u4e48\u91ca\u653e\u8d44\u6e90\uff1f"})]}),"\n",(0,a.jsx)(r.h3,{id:"aqs\u662f\u5e72\u5565\u7684",children:"AQS\u662f\u5e72\u5565\u7684\uff1f"}),"\n",(0,a.jsx)(r.p,{children:"state : \u6807\u8bc6\u8d44\u6e90\u7684\u72b6\u6001\r\nCLH\u961f\u5217\uff1a \u62a2\u4e0d\u5230\u8d44\u6e90\u7684\u7ebf\u7a0b\u5c31\u4f1a\u653e\u5230\u961f\u5217\u91cc\u9762\u8fdb\u884c\u7b49\u5f85\r\n\u5524\u9192\uff1a\u5f53\u8d44\u6e90\u88ab\u91ca\u653e\u540e\uff0c\u7b49\u5f85\u7684\u961f\u4f0d\u5c31\u80fd\u8fdb\u884c\u7ade\u4e89\u8d44\u6e90"}),"\n",(0,a.jsx)(r.h3,{id:"java8\u7248\u672caqs",children:"java8\u7248\u672caqs"}),"\n",(0,a.jsx)(r.p,{children:"\u4e3b\u8981\u8282\u70b9\u7684\u5c5e\u6027"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"static final int CANCELLED =  1;\r\n/** waitStatus value to indicate successor's thread needs unparking */\r\nstatic final int SIGNAL    = -1;\r\n/** waitStatus value to indicate thread is waiting on condition */\r\nstatic final int CONDITION = -2;\r\n/**\r\n * waitStatus value to indicate the next acquireShared should\r\n * unconditionally propagate\r\n */\r\nstatic final int PROPAGATE = -3;\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"public final void acquire(int arg) {\r\n    if (!tryAcquire(arg) &&\r\n            acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) {\r\n        selfInterrupt(); // \u8865\u507f\u4e2d\u65ad\r\n    }\r\n}\r\n\r\n// \u5c06\u7ebf\u7a0b\u5c01\u4efb\u52a1\u5c01\u88c5\u6210\u4e3a\u8282\u70b9\u653e\u5728\u961f\u5217\u672b\u5c3e\r\n// \u5c06\u8282\u70b9\u7684\u524d\u6307\u9488\u6307\u5411tail\uff0c\u7136\u540e\u7ade\u4e89tail\u6307\u5411\u81ea\u5df1\uff08\u6b7b\u5faa\u73af\uff09\r\n// \u5982\u679c\u6ca1\u6709\u5934\u8282\u70b9\uff0c\u5219\u5c06\u81ea\u5df1\u8bbe\u7f6e\u6210\u5934\u8282\u70b9\r\nprivate Node addWaiter(Node mode) {\r\n    Node node = new Node(Thread.currentThread(), mode);\r\n    // Try the fast path of enq; backup to full enq on failure\r\n    Node pred = tail;\r\n    if (pred != null) {\r\n        node.prev = pred;\r\n        if (compareAndSetTail(pred, node)) {\r\n            pred.next = node;\r\n            return node;\r\n        }\r\n    }\r\n    enq(node);\r\n    return node;\r\n}\r\nprivate Node enq(final Node node) {\r\n    for (;;) {\r\n        Node t = tail;\r\n        if (t == null) { // Must initialize\r\n            if (compareAndSetHead(new Node()))\r\n                tail = head;\r\n        } else {\r\n            node.prev = t;\r\n            if (compareAndSetTail(t, node)) {\r\n                t.next = node;\r\n                return t;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//\u73b0\u7ebf\u7a0b\u5728\u540c\u6b65\u961f\u5217\u4e2d\u7684\u963b\u585e-\u5524\u9192\u673a\u5236\r\nfinal boolean acquireQueued(final Node node, int arg) {\r\n    boolean failed = true;\r\n    try {\r\n        boolean interrupted = false;\r\n        for (;;) {\r\n            final Node p = node.predecessor(); // \u5f53\u524d\u8282\u70b9\u7684\u524d\u8282\u70b9\r\n            if (p == head && tryAcquire(arg)) { // \u524d\u9a71\u662f\u5934\u8282\u70b9\u4e14\u62a2\u9501\u6210\u529f\uff0c \u8bbe\u7f6e\u81ea\u5df1\u662f\u5934\u8282\u70b9\r\n                setHead(node);\r\n                p.next = null; // help GC\r\n                failed = false;\r\n                return interrupted;\r\n            }\r\n            if (shouldParkAfterFailedAcquire(p, node) &&  // \u975e\u5934\u8282\u70b9\u963b\u585e\r\n                    parkAndCheckInterrupt())\r\n                interrupted = true; // \u6807\u8bb0\u4e2d\u65ad\u72b6\u6001\r\n        }\r\n    } finally {\r\n        if (failed)\r\n            cancelAcquire(node);\r\n    }\r\n    \r\n/**\r\n * \u72b6\u6001\u5b89\u5168\u4fdd\u8bc1\uff1a\r\n \u53ea\u6709\u5728\u660e\u786e\u77e5\u9053\u524d\u9a71\u8282\u70b9\u4f1a\u901a\u77e5\uff08SIGNAL\uff09\u65f6\u624d\u963b\u585e\u7ebf\u7a0b\r\n \u907f\u514d\u7ebf\u7a0b\u88ab\u6c38\u4e45\u963b\u585e\uff08\u6b7b\u9501\u98ce\u9669\uff09\r\n 2.\r\n \u94fe\u8868\u7ef4\u62a4\uff1a\r\n \u81ea\u52a8\u6e05\u7406\u5df2\u53d6\u6d88\u7684\u8282\u70b9\uff08CANCELLED\uff09\uff0c\u4fdd\u6301\u94fe\u8868\u5065\u5eb7\r\n \u4fdd\u8bc1\u7b49\u5f85\u961f\u5217\u4e2d\u53ea\u6709\u771f\u6b63\u9700\u8981\u88ab\u5524\u9192\u7684\u7ebf\u7a0b\r\n 3.\r\n CAS\u64cd\u4f5c\uff1a\r\n \u5b89\u5168\u66f4\u65b0\u8282\u70b9\u72b6\u6001\uff0c\u907f\u514d\u540c\u6b65\u95ee\u9898\r\n \u4f7f\u7528 compareAndSetWaitStatus\u786e\u4fdd\u72b6\u6001\u53d8\u66f4\u7684\u539f\u5b50\u6027\r\n 4.\r\n \u6027\u80fd\u4f18\u5316\uff1a\r\n \u4f18\u5148\u5c1d\u8bd5\u76f4\u63a5\u8bbe\u7f6e SIGNAL \u72b6\u6001\uff08\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u963b\u585e\uff09\r\n \u7acb\u5373\u91cd\u8bd5\u673a\u5236\uff08\u8fd4\u56defalse\u65f6\uff09\u589e\u52a0\u83b7\u53d6\u9501\u7684\u673a\u4f1a\r\n */\r\nprivate static boolean shouldParkAfterFailedAcquire(Node pred, Node node) {\r\n    int ws = pred.waitStatus;\r\n    // \u524d\u9a71\u5df2\u8bbe\u7f6e SIGNAL\uff0c\u5f53\u524d\u7ebf\u7a0b\u53ef\u5b89\u5168\u963b\u585e\r\n    if (ws == Node.SIGNAL)\r\n        /*\r\n         * This node has already set status asking a release\r\n         * to signal it, so it can safely park.\r\n         */\r\n        return true;\r\n    // \u524d\u9a71\u4e3a CANCELLED\uff0c\u8df3\u8fc7\u65e0\u6548\u8282\u70b9   \r\n    if (ws > 0) { // \u8282\u70b9\u56e0\u8d85\u65f6/\u4e2d\u65ad\u88ab\u53d6\u6d88\r\n        /*\r\n         * Predecessor was cancelled. Skip over predecessors and\r\n         * indicate retry.\r\n         */\r\n        // \u5f53\u524d\u8282\u70b9\u662f\u53d6\u6d88\u72b6\u6001\uff0c\u5219\u4ece\u540e\u5f80\u524d\u904d\u5386\u8282\u70b9,\u76f4\u5230\u62ff\u5230\u4e00\u4e2a\u5c0f\u4e8e0\u7684\u8282\u70b9\u9000\u51fa\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u6ca1\u505a\u7ebf\u7a0b\u5b89\u5168\u5904\u7406 \r\n        // \u8fd9\u91cc\u56e0\u4e3a\u662f\u4fee\u6539\u5f53\u524d\u8282\u70b9\u548c\u524d\u8282\u70b9\uff0c\u4e0d\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u8282\u70b9\uff0c \u8282\u70b9\u7684\u63d2\u5165\u5df2\u7ecf\u5728addWaiter\u4e2d\u5904\u7406\u597d\u4e86\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u6e05\u7406\u6ca1\u7528\u7684\u8282\u70b9\r\n        do {\r\n            node.prev = pred = pred.prev;\r\n        } while (pred.waitStatus > 0);\r\n        pred.next = node;\r\n    } else {\r\n        /*\r\n         * waitStatus must be 0 or PROPAGATE.  Indicate that we\r\n         * need a signal, but don't park yet.  Caller will need to\r\n         * retry to make sure it cannot acquire before parking.\r\n         */\r\n        // \u524d\u9a71\u72b6\u6001\u4e3a 0 \u6216 PROPAGATE\uff0cCAS \u66f4\u65b0\u4e3a SIGNAL\r\n        compareAndSetWaitStatus(pred, ws, Node.SIGNAL);\r\n    }\r\n    return false;\r\n}\r\n}\r\n\r\n\r\nprivate void cancelAcquire(Node node) {\r\n    // Ignore if node doesn't exist\r\n    if (node == null)\r\n        return;\r\n\r\n    node.thread = null;\r\n\r\n    // Skip cancelled predecessors\r\n    // 2. \u8df3\u8fc7\u5df2\u53d6\u6d88\u7684\u524d\u9a71\r\n    Node pred = node.prev;\r\n    while (pred.waitStatus > 0)\r\n        node.prev = pred = pred.prev;\r\n\r\n    // predNext is the apparent node to unsplice. CASes below will\r\n    // fail if not, in which case, we lost race vs another cancel\r\n    // or signal, so no further action is necessary.\r\n    Node predNext = pred.next;\r\n\r\n    // Can use unconditional write instead of CAS here.\r\n    // After this atomic step, other Nodes can skip past us.\r\n    // Before, we are free of interference from other threads.\r\n    node.waitStatus = Node.CANCELLED;\r\n\r\n    // \u81ea\u5df1\u662f\u5c3e\u8282\u70b9\uff0c \u5219\u6e05\u7406\u81ea\u5df1\u5373\u53ef\r\n    // If we are the tail, remove ourselves.\r\n    if (node == tail && compareAndSetTail(node, pred)) {\r\n        compareAndSetNext(pred, predNext, null);\r\n    } else {\r\n        // If successor needs signal, try to set pred's next-link\r\n        // so it will get one. Otherwise wake it up to propagate.\r\n        int ws;\r\n        // \u8282\u70b9\u5728\u4e2d\u95f4\uff0c\uff08\u975e\u5934\u90e8\u8282\u70b9\uff09\uff0c \u6e05\u7406\u6389\u81ea\u5df1\uff0c\u5c06\u81ea\u5df1\u7684\u524d\u540e\u8fdb\u884c\u76f8\u8fde\r\n        if (pred != head &&\r\n                ((ws = pred.waitStatus) == Node.SIGNAL ||\r\n                        (ws <= 0 && compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) &&\r\n                pred.thread != null) {\r\n            Node next = node.next;\r\n            if (next != null && next.waitStatus <= 0)\r\n                compareAndSetNext(pred, predNext, next);\r\n        } else {\r\n            //  \u7279\u6b8a\u5904\u7406\uff1a\u5524\u9192\u540e\u7ee7\u9632\u6b62\u963b\u585e\r\n            unparkSuccessor(node);\r\n        }\r\n\r\n        node.next = node; // help GC\r\n    }\r\n}\n"})}),"\n",(0,a.jsx)(r.h3,{id:"\u4ee5\u4e0b\u662fjava17\u7248\u672c\u7684",children:"\u4ee5\u4e0b\u662fjava17\u7248\u672c\u7684"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"//\u4e3b\u8981\u5c5e\u6027\r\nprivate transient volatile Node head;\r\nprivate transient volatile Node tail;\r\nprivate volatile int state;\r\n\r\n\r\n//\u8282\u70b9\u7c7b\u578b\r\nabstract static class Node {\r\n    volatile Node prev;       // initially attached via casTail\r\n    volatile Node next;       // visibly nonnull when signallable\r\n    Thread waiter;            // visibly nonnull when enqueued\r\n    volatile int status;      // written by owner, atomic bit ops by others\r\n}\n"})}),"\n",(0,a.jsx)(r.p,{children:"aqs \u8d44\u6e90\u9501\u5b9a\u65b9\u6cd5\r\ntryAcquire \u81ea\u5df1\u5b9e\u73b0\r\n\u7ebf\u7a0b\u8282\u70b9\u6709\u51e0\u79cd\u72b6\u6001: \u5934\u8282\u70b9\u7684\u540e\u9a71\u8282\u70b9\uff0c \u5728\u961f\u5217\u7684\u5176\u4ed6\u8282\u70b9\uff0c \u7b49\u5f85\u5165\u961f\u7684\u8282\u70b9"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"final int acquire(Node node, int arg, boolean shared,\r\n                      boolean interruptible, boolean timed, long time) {\r\n        Thread current = Thread.currentThread();\r\n        byte spins = 0, postSpins = 0;   // retries upon unpark of first thread\r\n        boolean interrupted = false, first = false;\r\n        Node pred = null;                // predecessor of node when enqueued\r\n\r\n        /*\r\n         * Repeatedly:\r\n         *  Check if node now first\r\n         *    if so, ensure head stable, else ensure valid predecessor\r\n         *  if node is first or not yet enqueued, try acquiring\r\n         *  else if node not yet created, create it\r\n         *  else if not yet enqueued, try once to enqueue\r\n         *  else if woken from park, retry (up to postSpins times)\r\n         *  else if WAITING status not set, set and retry\r\n         *  else park and clear WAITING status, and check cancellation\r\n         */\r\n        // \u81ea\u65cb\r\n        for (;;) {\r\n            // first \uff1a\u5934\u8282\u70b9\uff08head\uff09\u7684\u76f4\u63a5\u540e\u7ee7\u8282\u70b9\r\n            // \u8fd9\u91cc\u662f\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u904d\u5386\u7684\r\n            if (!first && (pred = (node == null) ? null : node.prev) != null &&\r\n                !(first = (head == pred))) {\r\n                // \u524d\u9a71\u8282\u70b9\u5df2\u53d6\u6d88\uff0c\u6e05\u7406\u961f\u5217\r\n                if (pred.status < 0) {\r\n                    cleanQueue();           // predecessor cancelled\r\n                    continue;\r\n                } else if (pred.prev == null) {\r\n                    Thread.onSpinWait();     // \u524d\u9a71\u8282\u70b9\u6b63\u5728\u4fee\u6539\uff0c\u81ea\u65cb\u7b49\u5f85\u7a33\u5b9a \uff1f\uff1f\r\n                    continue;\r\n                }\r\n            }\r\n            // \u5f53\u524d\u8282\u70b9\u4e3a\u5934\u8282\u70b9\r\n            if (first || pred == null) {\r\n                boolean acquired;\r\n                try {\r\n                    // cas\u83b7\u53d6\u9501\u6807\u8bc6\r\n                    if (shared)\r\n                        acquired = (tryAcquireShared(arg) >= 0);\r\n                    else\r\n                        acquired = tryAcquire(arg);\r\n                } catch (Throwable ex) {\r\n                    cancelAcquire(node, interrupted, false); // \u5f02\u5e38\u65f6\u53d6\u6d88\u83b7\u53d6\r\n                    throw ex;\r\n                }\r\n                // \u83b7\u53d6\u9501\u6210\u529f\u540e\uff0c\u5f53\u524d\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9\r\n                if (acquired) {\r\n                    if (first) {\r\n                        node.prev = null;\r\n                        head = node;\r\n                        pred.next = null;\r\n                        node.waiter = null;\r\n                        if (shared)\r\n                            signalNextIfShared(node); // \u5171\u4eab\u6a21\u5f0f\u5524\u9192\u540e\u7eed\u8282\u70b9\r\n                        if (interrupted)\r\n                            current.interrupt();  // \u6062\u590d\u4e2d\u65ad\u72b6\u6001\r\n                    }\r\n                    return 1;\r\n                }\r\n            }\r\n            // \u521d\u59cb\u5316\u8282\u70b9\r\n            if (node == null) {                 // allocate; retry before enqueue\r\n                if (shared)\r\n                    node = new SharedNode();\r\n                else\r\n                    node = new ExclusiveNode();\r\n            } else if (pred == null) {          // try to enqueue\r\n                // \u524d\u9a71\u8282\u70b9\u4e3anull\uff0c\u8bf4\u660e\u8fd8\u6ca1\u5165\u961f\uff0c \u5c1d\u8bd5\u5165\u961f\r\n                node.waiter = current;  // \u7ed1\u5b9a\u5f53\u524d\u7ebf\u7a0b\r\n                Node t = tail;\r\n                node.setPrevRelaxed(t);         // \u8bbe\u7f6e\u524d\u9a71\u8282\u70b9\r\n                if (t == null)\r\n                    tryInitializeHead(); // \u6ca1\u6709\u8282\u70b9\uff0c\u5219\u5c1d\u8bd5\u521d\u59cb\u5316\u8282\u70b9 \uff0ccas\u521d\u59cb\u5316\u8282\u70b9\r\n                else if (!casTail(t, node)) // cas\u6bd4\u8f83\u5165\u961f\r\n                    node.setPrevRelaxed(null);  // back out\r\n                else\r\n                    t.next = node;      //  \u6210\u529f\u5165\u961f\r\n            } else if (first && spins != 0) {\r\n                --spins;                        // \u51cf\u5c11\u81ea\u65cb\u6b21\u6570\uff0c\u907f\u514d\u8fc7\u5ea6\u4e0d\u516c\u5e73\r\n                Thread.onSpinWait();\r\n            } else if (node.status == 0) {\r\n                node.status = WAITING;          // \u6807\u8bb0\u8282\u70b9\u4e3a\u7b49\u5f85\u5524\u9192\u72b6\u6001\r\n            } else {\r\n                // \u963b\u585e\u7ebf\u7a0b\uff08\u652f\u6301\u8d85\u65f6\uff09\r\n                long nanos;\r\n                spins = postSpins = (byte)((postSpins << 1) | 1);\r\n                if (!timed)\r\n                    LockSupport.park(this);\r\n                else if ((nanos = time - System.nanoTime()) > 0L)\r\n                    LockSupport.parkNanos(this, nanos);\r\n                else\r\n                    break;\r\n                node.clearStatus();\r\n                if ((interrupted |= Thread.interrupted()) && interruptible)\r\n                    break;\r\n            }\r\n        }\r\n        //\u53d6\u6d88\u8c03\u5ea6 \u6700\u4e0a\u9762\u7684elese \u903b\u8f91\u53ef\u77e5\u3002\u8d85\u65f6\u83b7\u53d6\u5931\u8d25\u6216\u8005\u7ebf\u7a0b\u6253\u65ad\u540e\u5c31\u4f1a\u89e6\u53d1\u8be5\u903b\u8f91\r\n        return cancelAcquire(node, interrupted, interruptible); \r\n    }\n"})}),"\n",(0,a.jsx)(r.p,{children:"AQS\u91ca\u653e\u9501"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"    public final boolean release(int arg) {\r\n        if (tryRelease(arg)) {\r\n            signalNext(head);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static void signalNext(Node h) {\r\n        Node s;\r\n        if (h != null && (s = h.next) != null && s.status != 0) {\r\n            s.getAndUnsetStatus(WAITING);\r\n            LockSupport.unpark(s.waiter);\r\n        }\r\n    }\n"})}),"\n",(0,a.jsx)(r.p,{children:"\u65e0\u6548\u8282\u70b9\u6e05\u7406"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"\r\nprivate void cleanQueue() {\r\n        \r\n        for (;;) {                               // restart point\r\n            // q\u5f53\u524d\u7cfb\u8282\u70b9\uff0c s\u540e\u7ee7\u8282\u70b9\uff0c p\uff1a\u524d\u9a71\u8282\u70b9\r\n            // \u4ece\u540e\u5f80\u524d\u904d\u5386\r\n            for (Node q = tail, s = null, p, n;;) { // (p, q, s) triples\r\n                if (q == null || (p = q.prev) == null)\r\n                    return;                      // end of list\r\n                if (s == null ? tail != q : (s.prev != q || s.status < 0))\r\n                    break;                       // inconsistent\r\n                if (q.status < 0) {              // cancelled\r\n                    // \u4e3a\u4ec0\u4e48\u8fd9\u91cc\u5148\u8bbe\u7f6e\u524d\u9a71\u8282\u70b9\uff0c\u5728\u8bbe\u7f6e\u540e\u9a71\u8282\u70b9\uff1f\uff0c\u4fdd\u8bc1\u4ece\u540e\u5230\u524d\u7684\u961f\u5217\u4e0d\u4f1a\u65ad\u88c2\r\n                    if ((s == null ? casTail(q, p) : s.casPrev(q, p)) &&\r\n                        q.prev == p) {\r\n                        p.casNext(q, s);         // OK if fails  \r\n                        if (p.prev == null) // \u6ca1\u6709\u524d\u9a71\u8282\u70b9\u5c31\u662f\u5934\u8282\u70b9\u4e86\uff0c\u9700\u8981\u5524\u9192\u540e\u7eed\u7684\u8282\u70b9\r\n                            signalNext(p);\r\n                    }\r\n                    break;\r\n                }\r\n                if ((n = p.next) != q) {         // help finish\r\n                    if (n != null && q.prev == p) {\r\n                        p.casNext(n, q);\r\n                        if (p.prev == null)\r\n                            signalNext(p);\r\n                    }\r\n                    break;\r\n                }\r\n                s = q;\r\n                q = q.prev;\r\n            }\r\n        }\r\n    }\r\n\n"})}),"\n",(0,a.jsx)(r.p,{children:"\u963b\u585e\u548c\u5524\u9192\u65b9\u5f0f\uff1a\r\nLockSupport"}),"\n",(0,a.jsx)(r.h1,{id:"reentrantlock",children:"ReentrantLock"}),"\n",(0,a.jsx)(r.p,{children:"\u975e\u516c\u5e73\u9501\u5b9e\u73b0\r\n\u5728\u8c03\u7528\u52a0\u9501\u903b\u8f91\u540e\u5148\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5165\u961f\u5217\r\n\u5f53\u524d\u7ebf\u7a0b\u76f4\u63a5\u91cd\u5165\r\njava.util.concurrent.locks.ReentrantLock.NonfairSync"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'    final boolean initialTryLock() {\r\n        Thread current = Thread.currentThread();\r\n        if (compareAndSetState(0, 1)) { // first attempt is unguarded\r\n            setExclusiveOwnerThread(current);\r\n            return true;\r\n        } else if (getExclusiveOwnerThread() == current) {\r\n            int c = getState() + 1;\r\n            if (c < 0) // overflow\r\n                throw new Error("Maximum lock count exceeded");\r\n            setState(c);\r\n            return true;\r\n        } else\r\n            return false;\r\n    }\n'})}),"\n",(0,a.jsx)(r.p,{children:"\u516c\u5e73\u9501\u5b9e\u73b0\r\n\u5148\u67e5\u770b\u961f\u5217\u91cc\u9762\u662f\u5426\u8fd8\u5b58state > 0\u7684\u8282\u70b9,\u5982\u679c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u5148\u8fdb\u884c\u9501\u7684\u83b7\u53d6\r\nhasQueuedThreads\u8fd9\u4e2a\u5728AQS\u4e2d\u5b9e\u73b0\u4e86\uff0c\u800c\u4e14\u662f\u4ece\u540e\u5f80\u524d\u904d\u5386\u7684\uff08\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff09\r\n\u5f53\u524d\u7ebf\u7a0b\u76f4\u63a5\u91cd\u5165\r\njava.util.concurrent.locks.ReentrantLock.FairSync"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'    final boolean initialTryLock() {\r\n        Thread current = Thread.currentThread();\r\n        int c = getState();\r\n        if (c == 0) {\r\n            if (!hasQueuedThreads() && compareAndSetState(0, 1)) {\r\n                setExclusiveOwnerThread(current);\r\n                return true;\r\n            }\r\n        } else if (getExclusiveOwnerThread() == current) {\r\n            if (++c < 0) // overflow\r\n                throw new Error("Maximum lock count exceeded");\r\n            setState(c);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\n'})}),"\n",(0,a.jsx)(r.h4,{id:"\u52a0\u9501\u903b\u8f91",children:"\u52a0\u9501\u903b\u8f91"}),"\n",(0,a.jsx)(r.p,{children:"\u4fee\u6539state\uff08\u8d44\u6e90\uff09\u7684\u72b6\u6001\r\n\u8bbe\u7f6e\u5f53\u524d\u7ebf\u7a0b\u72ec\u5360\r\n\u53ef\u91cd\u5165"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:'    final boolean tryLock() {\r\n            Thread current = Thread.currentThread();\r\n            int c = getState();\r\n            if (c == 0) {\r\n                if (compareAndSetState(0, 1)) {\r\n                    setExclusiveOwnerThread(current);\r\n                    return true;\r\n                }\r\n            } else if (getExclusiveOwnerThread() == current) {\r\n                if (++c < 0) // overflow\r\n                    throw new Error("Maximum lock count exceeded");\r\n                setState(c);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\n'})}),"\n",(0,a.jsx)(r.p,{children:"\u4fee\u6539state\uff08\u8d44\u6e90\uff09\u7684\u72b6\u6001\r\n\u5f53state\u91ca\u653e\u5b8c\u8d44\u6e90\uff080\uff09\u65f6\u5019\uff0c\u53d6\u6d88\u5f53\u524d\u7ebf\u7a0b\u72ec\u5360\r\n\u975e\u5f53\u524d\u7ebf\u7a0b\u4e3a\u4ec0\u4e48\u629b\u5f02\u5e38\uff1f\r\n\u56e0\u4e3a\u7ebfstate\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5360\u7528\uff0c\u4e0d\u5b58\u5728\u5e76\u53d1\u95ee\u9898\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4e0d\u7528\u505a\u7ebf\u7a0b\u5b89\u5168\u5904\u7406"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"        protected final boolean tryRelease(int releases) {\r\n            int c = getState() - releases;\r\n            if (getExclusiveOwnerThread() != Thread.currentThread())\r\n                throw new IllegalMonitorStateException();\r\n            boolean free = (c == 0);\r\n            if (free)\r\n                setExclusiveOwnerThread(null);\r\n            setState(c);\r\n            return free;\r\n        }\n"})}),"\n",(0,a.jsx)(r.p,{children:"lock\r\nsync.lock()"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"    final void lock() {\r\n        if (compareAndSetState(0, 1))\r\n            setExclusiveOwnerThread(Thread.currentThread());\r\n        else\r\n            acquire(1);\r\n    }\n"})}),"\n",(0,a.jsx)(r.p,{children:"acquire(1)"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",children:"    public final void acquire(int arg) {\r\n    if (!tryAcquire(arg) &&\r\n            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))\r\n        selfInterrupt();\r\n}\n"})}),"\n",(0,a.jsx)(r.p,{children:"tryAcquire \u81ea\u5b9a\u4e49\u7684\u9501\u83b7\u53d6\r\nacquireQueued"})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>l});var t=n(96540);const a={},i=t.createContext(a);function s(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);